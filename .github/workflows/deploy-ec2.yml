name: Deploy to EC2
on: [push]
jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Use Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18.x'
  #     - name: Build and Test
  #       working-directory: server
  #       run: |
  #         npm ci
  #         npm run build --if-present
  #         npm test

  deploy:
    # needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3
      - name: deploy to ec2
        uses: appleboy/ssh-action@master
        with:
          host: '${{ secrets.HOST_DNS }}'
          username: '${{ secrets.EC2_USERNAME }}'
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/ArticleHub
            git switch main

            # echo "MONGODB=${{ secrets.MONGODB }}" > /home/ubuntu/ArticleHub/server/.env
            # echo "JWT_KEY=${{ secrets.JWT_KEY }}" >> /home/ubuntu/ArticleHub/server/.env
            # echo "PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}" >> /home/ubuntu/ArticleHub/server/.env
            # echo "CRT=${{ secrets.CRT }}" >> /home/ubuntu/ArticleHub//server.env
            # echo "CLIENT_HTML=${{ secrets.CLIENT_HTML }}" >> /home/ubuntu/ArticleHub/server.env

            # clean up
            docker compose down
            docker system prune -a -f
            docker volume prune -f

            #pull change
            git fetch origin main
            git reset --hard origin/main

            #compose
            docker compose build --no-cache
            docker compose up -d
